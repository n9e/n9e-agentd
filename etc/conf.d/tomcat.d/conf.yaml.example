## All options defined here are available to all instances.
#
initConfig:

    ## @param isJmx - boolean - required
    ## Whether or not this file is a configuration for a JMX integration.
    #
    isJmx: true

    ## @param collectDefaultMetrics - boolean - required
    ## Whether or not the check should collect all default metrics.
    #
    collectDefaultMetrics: true

    ## @param newGcMetrics - boolean - optional - default: false
    ## Set to true to use better metric names for garbage collection metrics.
    ## jvm.gc.cms.count   => jvm.gc.minorCollectionCount
    ##                       jvm.gc.majorCollectionCount
    ## jvm.gc.parnew.time => jvm.gc.minorCollectionTime
    ##                       jvm.gc.majorCollectionTime
    ## The default value is false to ensure backward compatibility.
    #
    # newGcMetrics: false

    ## @param serviceCheckPrefix - string - optional
    ## Custom service check prefix. e.g. `myPrefix` to get a service check called `myPrefix.canConnect`.
    ## If not set, the default service check used is the integration name.
    #
    # serviceCheckPrefix: <SERVICE_CHECK_PREFIX>

    ## @param conf - list of mappings - optional
    ## The list of metrics to be collected by the integration
    ## Read http://docs.datadoghq.com/integrations/java/ to learn how to customize it
    ## The default metrics to be collected are kept in metrics.yaml, but you can still
    ## add your own metrics here.
    #
    # conf:
    #   - include:
    #       bean: <BEAN_NAME>
    #       attribute:
    #         MyAttribute:
    #           alias: my.metric.name
    #           metricType: gauge

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Every instance is scheduled independent of the others.
#
instances:

    ## @param host - string - required
    ## Tomcat JMX hostname to connect to.
    #
  - host: localhost

    ## @param port - integer - required
    ## Tomcat JMX port to connect to.
    #
    port: 9012

    ## @param user - string - optional
    ## User to use when connecting to JMX.
    #
    # user: <USER>

    ## @param password - string - optional
    ## Password to use when connecting to JMX.
    #
    # password: <PASSWORD>

    ## @param processNameRegex - string - optional
    ## Instead of using a host and port, the Agent can connect using the attach API.
    ## This requires the JDK to be installed and the path to tools.jar to be set below.
    ## Note: It needs to be set when processNameRegex parameter is set
    ## e.g. .*processName.*
    #
    # processNameRegex: <PROCESS_NAME_REGEX>

    ## @param toolsJarPath - string - optional
    ## The tool.jar path to be used with the `processNameRegex` parameter,
    ## for example: /usr/lib/jvm/java-11-openjdk-amd64/lib/tools.jar
    #
    # toolsJarPath: <TOOLS_JAR_PATH>

    ## @param name - string - optional
    ## Set the instance name to be used as the `instance` tag.
    #
    # name: <NAME>

    ## @param javaBinPath - string - optional
    ## `javaBinPath` should be set if the Agent cannot find your java executable.
    #
    # javaBinPath: <JAVA_BIN_PATH>

    ## @param javaOptions - string - optional
    ## A list of Java JVM options, for example: "-Xmx200m -Xms50m".
    #
    # javaOptions: <JAVA_OPTIONS>

    ## @param trustStorePath - string - optional
    ## The path to your trusted store.
    ## `trustStorePath` should be set if SSL is enabled.
    #
    # trustStorePath: <TRUST_STORE_PATH>

    ## @param trustStorePassword - string - optional
    ## The password for your TrustStore.jks file.
    ## `trustStorePassword` should be set if SSL is enabled.
    #
    # trustStorePassword: <TRUST_STORE_PASSWORD>

    ## @param keyStorePath - string - optional
    ## The path to your key store.
    ## `keyStorePath` should be set if client authentication is enabled on the target JVM.
    #
    # keyStorePath: <KEY_STORE_PATH>

    ## @param keyStorePassword - string - optional
    ## The password to your key store.
    ## `keyStorePassword` should be set if client authentication is enabled on the target JVM.
    #
    # keyStorePassword: <KEY_STORE_PASSWORD>

    ## @param rmiRegistrySsl - boolean - optional - default: false
    ## Whether or not the Agent should connect to the RMI registry using SSL.
    #
    # rmiRegistrySsl: false

    ## @param rmiConnectionTimeout - number - optional - default: 20000
    ## The connection timeout, in milliseconds, when connecting to a remote JVM.
    #
    # rmiConnectionTimeout: 20000

    ## @param rmiClientTimeout - number - optional - default: 15000
    ## The timeout to consider a remote connection, already successfully established, as lost.
    ## If a connected remote JVM does not reply after `rmiClientTimeout` milliseconds jmxfetch
    ## will give up on that connection and retry.
    #
    # rmiClientTimeout: 15000

    ## @param collectDefaultJvmMetrics - boolean - optional - default: true
    ## Configures the collection of default JVM metrics.
    #
    # collectDefaultJvmMetrics: true

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `initConfig` section.
    #
    # service: <SERVICE>

    ## @param minCollectionInterval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/writeAgentCheck/#collection-interval
    #
    # minCollectionInterval: 15

    ## @param emptyDefaultHostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # emptyDefaultHostname: false

## Log Section
##
## type - required - Type of log input source (tcp / udp / file / windowsEvent)
## port / path / channelPath - required - Set port if type is tcp or udp.
##                                         Set path if type is file.
##                                         Set channelPath if type is windowsEvent.
## source  - required - Attribute that defines which Integration sent the logs.
## encoding - optional - For file specifies the file encoding, default is utf-8, other
##                       possible values are utf-16-le and utf-16-be.
## service - optional - The name of the service that generates the log.
##                      Overrides any `service` defined in the `initConfig` section.
## tags - optional - Add tags to the collected logs.
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/logCollection/
#
# logs:
#   - type: file
#     path: /var/log/tomcat/*.log
#     source: tomcat
#     service: <SERVICE_NAME>
