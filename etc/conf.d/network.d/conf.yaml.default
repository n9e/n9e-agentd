## This file is overwritten upon Agent upgrade.
## To make modifications to the check configuration, please copy this file
## to `network.yaml` and make your changes on that file.
#
initConfig:

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Network check only supports one configured instance
#
instances:

    ## @param collectConnectionState - boolean - required
    ## Set to true to collect connection states for your interfaces
    ## Note: this will require either the command `ss` from system package `iproute2` or
    ## the command `netstat` from the system package `net-tools` to be installed
    #
  - collectConnectionState: false

    ## @param collectConnectionQueues - boolean - optional - default: false
    ## Set to true to enable connection queues collection
    ## Note: connection queues collections require both
    ## `collectConnectionState` and `collectConnectionQueues` to be true
    ## because it also requires the command `ss` from system package `iproute2` or
    ## the command `netstat` from the system package `net-tools` to be installed
    #
    # collectConnectionQueues: false

    ## @param excludedInterfaces - list of strings - optional
    ## List of interface to exclude from the check.
    #
    # excludedInterfaces:
    #   - lo
    #   - lo0

    ## @param excludedInterfaceRe - string - optional
    ## Completely ignore any network interface matching the given regex.
    #
    # excludedInterfaceRe: <NETWORK_INTERFACE_NAME>.*

    ## @param combineConnectionStates - boolean - optional - default: true
    ## Set to false to not combine connection states.
    ## By default we combine states like fin_wait_1 and fin_wait_2
    ## together into one state: 'closing' disable this option to get more granular data.
    #
    # combineConnectionStates: true

    ## @param collectRateMetrics - boolean - optional - default: true
    ## By default, most metrics are submitted as rates.
    ## However, some metrics like tcp/udp retransmissions and errors are
    ## better handled as counts.
    ## Choose to disable rate metrics by setting collectRateMetrics to false.
    #
    # collectRateMetrics: true

    ## @param collectCountMetrics - boolean - optional - default: false
    ## By default, most metrics are submitted as rates.
    ## However, some metrics like tcp/udp retransmissions and errors are
    ## better handled as counts.
    ## Choose to enable count metrics by setting collectCountMetrics to true.
    ## Count metrics have '.count' added to the metric name.
    #
    # collectCountMetrics: false

    ## @param conntrackPath - string - optional
    ## Linux only.
    ## The location of the conntrack executable in order to get the stats from conntrack -S.
    ## It will be run with sudo by default, so an entry needs to be added to the sudoers file.
    ## By default, these metrics will not be sent.
    #
    # conntrackPath: /usr/sbin/conntrack

    ## @param useSudoConntrack - boolean - optional - default: true
    ## Set to False to disable sudo when running `conntrack -S`
    ## (`sudo` isn't normally available in containers)
    #
    # useSudoConntrack: true

    ## @param whitelistConntrackMetrics - list of strings - optional - default: ['max', 'count']
    ## Linux only.
    ## Names of the conntrack metrics to whitelist for monitoring. The metric value is in the file
    ## /${proc}/sys/net/netfilter/nf_conntrack_${metric_name}.
    ## By default the agent collects only max and count.
    ## Regex expressions for the project names are supported.
    ## Blacklist takes precedence over whitelist in case of overlap.
    #
    # whitelistConntrackMetrics:
    #   - <METRIC_NAME>
    #   - <METRIC_PREFIX>.*

    ## @param blacklistConntrackMetrics - list of strings - optional - default: []
    ## Linux only.
    ## Names of the conntrack metrics to blacklist for monitoring. The metric value is in the file
    ## /${proc}/sys/net/netfilter/nf_conntrack_${metric_name}.
    ## If set, whitelist default value is reset to [].
    ## Regex expressions for the project names are supported.
    ## Blacklist takes precedence over whitelist in case of overlap.
    #
    # blacklistConntrackMetrics:
    #   - <METRIC_NAME>
    #   - <METRIC_PREFIX>.*

    ## @param collectAwsEnaMetrics - boolean - optional - default: false
    ## Turn on collection of the AWS Elastic Network Adapter (ENA) statistics for network interfaces.
    ##
    ## This will only work on ENA-enabled instances, see:
    ## https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking-ena.html#ena-requirements
    ##
    ## Note that when running this check in container, it will return metrics for the container
    ## network interfaces. To get host-level ENA metrics from a container, it needs to be executed
    ## with `CAP_NET_ADMIN` capability and use the `host` network mode.
    #
    # collectAwsEnaMetrics: false

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `init_config` section.
    #
    # service: <SERVICE>

    ## @param minCollectionInterval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # minCollectionInterval: 15

    ## @param emptyDefaultHostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # emptyDefaultHostname: false
