## The agent honors the DOCKER_HOST, DOCKER_CERT_PATH and DOCKER_TLS_VERIFY
## environment variables to set up the connection to the server.
## See https://docs.docker.com/engine/reference/commandline/cli/#environment-variables

adIdentifiers:
  - _docker

initConfig:

instances:

  -

    ## @param collectEvents - boolean - optional - default: true
    ## Create events whenever a container status changes.
    #
    # collectEvents: true

    ## @param filteredEventTypes - list of strings - optional - default: ['top', 'execStart', 'execCreate', 'execDie']
    ## List of excluded (filtered out) event types. Docker events of this type are not collected.
    ## A list of available statuses can be found at:
    ## https://docs.docker.com/engine/reference/commandline/events/#object-types
    #
    # filteredEventTypes:
    #   - 'top'
    #   - 'execStart'
    #   - 'execCreate'
    #   - 'execDie'

    ## @param collectContainerSize - boolean - optional - default: false
    ## Collect disk usage per container with docker.container.sizeRw and
    ## docker.container.sizeRootfs metrics.
    ## Warning: This might take time for Docker daemon to generate,
    ## ensure that `docker ps -a -q` runs fast before enabling it.
    #
    # collectContainerSize: false

    ## @param collectContainerSizeFrequency - integer - optional - default: 5
    ## Set the collection frequency (once every X check runs) of disk user per container metrics.
    #
    # collectContainerSizeFrequency: 5

    ## @param collectImagesStats - boolean - optional - default: false
    ## Set to true to gather the number of available active images and intermediate images as gauges.
    #
    # collectImagesStats: false

    ## @param collectImageSize - boolean - optional - default: false
    ## Set to true to collect disk usage per image with docker.image.size and docker.image.virtualSize metrics.
    ## The check gets this size with the `docker images` command. It requires collectImagesStats to be enabled.
    #
    # collectImageSize: true

    ## @param collectDiskStats - boolean - optional - default: false
    ## Collect disk metrics (total, used, free) through the Docker info command for data and metadata.
    ## This is useful when these values can't be obtained by the disk check.
    ## Example: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html
    ##
    ## Note: This only works when the storage driver is devicemapper.
    ## Explanation of these metrics can be found here:
    ## https://github.com/docker/docker/blob/v1.11.1/daemon/graphdriver/devmapper/README.md
    #
    # collectDiskStats: false

    ## @param collectExitCodes - boolean - optional - default: false
    ## Collect containers exit codes and send service checks critical when exit code is not 0.
    #
    # collectExitCodes: false

    ## @param tags - list of strings following the pattern: "key:value" - optional
    ## List of tags to attach to every metric, event, and service check emitted by this integration.
    ##
    ## Learn more about tagging: https://docs.datadoghq.com/tagging/
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param cappedMetrics - list of key:value elements - optional
    ## Allows ad-hoc spike filtering if the system reports incorrect metrics.
    ## This drops points if the computed rate is higher than the cap value.
    #
    # cappedMetrics:
    #   docker.cpu.user: 1000
    #   docker.cpu.system: 1000
