## WARNING: This configuration files is for SNMP v1, v2 and v3
## Check carefully all variables depending of your SNMP version.
## To learn more about SNMP v3 configuration check:
## http://snmplabs.com/pysnmp/docs/api-reference.html#user-based

initConfig:

  ## @param oidBatchSize - integer - optional - default: 10
  ## The number of OIDs handled by each batch. Increasing this number improves performance but
  ## uses more resources.
  #
  # oidBatchSize: 10

  ## @param globalMetrics - list of elements - optional
  ## Specify globalMetrics you want to monitor by using MIBS for Counter and Gauge.
  ## globalMetrics are applied to all instances where useGlobalMetrics is set to true at the instance level.
  ##
  ## Single scalar metrics and table metrics can be defined in this section.
  ## Details on how to define metrics can be found here:
  ## https://datadoghq.dev/integrations-core/tutorials/snmp/profile-format/#metrics
  #
  #
  # globalMetrics:
  #   - OID: 1.3.6.1.2.1.6.5.0
  #     name: tcpPassiveOpens
  #   - OID: 1.3.6.1.2.1.6.5.0
  #     name: tcpPassiveOpens
  #     metricTags:
  #       - TCP

  ## @param profiles - object - optional
  ## Specify profiles to be able to reference a set of metrics by name.
  ## One of definitionFile or definition needs to be defined.
  ## definitionFile points to a file with a profile, whereas definition inlines
  ## it directly here.
  ## When using a profile present on the profiles directory of the
  ## configuration, you can directly pass the filename.
  ## By default, it loads all the profiles installed in the python package and
  ## in the configuration directory, if the file doesn't start with an underscore.
  #
  # profiles:
  #   f5-big-ip:
  #     definitionFile: f5-big-ip.yaml
  #   router:
  #     definitionFile: generic-router.yaml
  #   cisco-3850:
  #     definitionFile: cisco-3850.yaml
  #   meraki-cloud-controller:
  #     definitionFile: meraki-cloud-controller.yaml
  #   idrac:
  #     definitionFile: idrac.yaml
  #   cisco-nexus:
  #     definitionFile: cisco-nexus.yaml
  #   dell-poweredge:
  #     definitionFile: dell-poweredge.yaml
  #   hp-ilo4:
  #     definitionFile: hp-ilo4.yaml
  #   hpe-proliant:
  #     definitionFile: hpe-proliant.yaml
  #   palo-alto:
  #     definitionFile: palo-alto.yaml
  #   cisco-asa-5525:
  #     definitionFile: cisco-asa-5525.yaml
  #   checkpoint-firewall:
  #     definitionFile: checkpoint-firewall.yaml
  #   isilon:
  #     definitionFile: isilon.yaml
  #   apc-ups:
  #     definitionFile: apc-ups.yaml
  #   fortinet-fortigate:
  #     definitionFile: fortinet-fortigate.yaml
  #   netapp:
  #     definitionFile: netapp.yaml

instances:
  -
    ## @param ipAddress - string - optional
    ## The IP address of the device to monitor.
    ## One of ipAddress and networkAddress must be provided.
    #
    # ipAddress: <IP_ADDRESS>

    ## @param networkAddress - string - optional
    ## The network address of the devices to scan for monitor.
    #
    # networkAddress: <NETWORK_ADRESS>

    ## @param ignoredIpAddresses - list of string - optional
    ## A list of IP addresses to ignore when scanning the network.
    #
    # ignoredIpAddresses:
    #   - <IP_ADDRESS_1>
    #   - <IP_ADDRESS_2>

    ## @param port - integer - optional - default: 161
    ## Default SNMP port.
    #
    # port: 161

    ## @param communityString - string - optional
    ## Only useful for SNMP v1 & v2.
    #
    # communityString: public

    ## @param snmpVersion - integer - optional - default: 2
    ## If you are using SNMP v1 set snmpVersion to 1 (required)
    ## If you are using SNMP v3 set snmpVersion to 3 (required)
    #
    # snmpVersion: 2

    ## @param timeout - integer - optional - default: 5
    ## Amount of second before timing out.
    #
    # timeout: 5

    ## @param retries - integer - optional - default: 5
    ## Amount of retries before failure.
    #
    # retries: 5

    ## @param discoveryInterval - integer - optional - default: 3600
    ## Interval between 2 discovery starts, in seconds.
    #
    # discoveryInterval: 3600

    ## @param discoveryAllowedFailures - integer - optional - default: 3
    ## Number of times a discovered host can fail before we remove it from the discovered list.
    #
    # discoveryAllowedFailures: 3

    ## @param workers - integer - optional - default: 5
    ## Number of workers used for check when using discovery.
    #
    # workers: 5

    ## @param enforceMibConstraints - boolean - optional - default: true
    ## If set to false we will not check the values returned meet the MIB constraints.
    #
    # enforceMibConstraints: true

    ## @param bulkThreshold - integer - optional - default: 0
    ## The number of symbols in each table that triggers a BULK request.
    ## Only relevant for SNMP > 1.
    #
    # bulkThreshold: 0

    ## @param tags - list of key:value element - optional
    ## List of tags to attach to every metric, event and service check emitted by this integration.
    ##
    ## Learn more about tagging: https://docs.datadoghq.com/tagging/
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## SNMP v3 specific configuration
    ## Learn more about SNMP v3 configuration here: http://snmplabs.com/pysnmp/docs/api-reference.html#user-based

    ## @param user - string - optional
    ## USERNAME to connect to your SNMP devices.
    #
    # user: <USERNAME>

    ## @param authProtocol - string - optional
    ## Authentication type to use when connecting to your SNMP devices.
    ## It can be one of: MD5, SHA, SHA224, SHA256, SHA384, SHA512.
    ## Default to MD5 when `authKey` is specified.
    #
    # authProtocol: <AUTHENTICATION_PROTOCOL>

    ## @param authKey - string - optional
    ## Authentication key to use with your Authentication type.
    #
    # authKey: <AUTHENTICATION_TYPE_KEY>

    ## @param privProtocol - string - optional
    ## Privacy type to use when connecting to your SNMP devices.
    ## It can be one of: DES, 3DES, AES, AES192, AES256, AES192C, AES256C.
    ## Default to DES when `privKey` is specified.
    #
    # privProtocol: <PRIVACY_TYPE>

    ## @param privKey - string - optional
    ## Privacy type key to use with your Privacy type.
    #
    # privKey: <PRIVACY_TYPE_KEY>

    ## @param context_engine_id - string - optional
    ## ID of your context engine; typically unneeded.
    ## (optional SNMP v3-only parameter)
    #
    # contextEngineId: <CONTEXT_ENGINE_ID>

    ## @param contextName - string - optional
    ## Name of your context (optional SNMP v3-only parameter).
    #
    # contextName: <CONTEXT_NAME>

    ## @param useGlobalMetrics - boolean - optional - default: true
    ## Whether or not globalMetrics should be included for this instance.
    #
    # useGlobalMetrics: true

    ## @param profile - string - optional
    ## Name of the profile to use, if any.
    #
    # profile: <PROFILE_NAME>

    ## @param metrics - list of elements - optional
    ## Specify metrics you want to monitor.
    ## metrics set here will override globalMetrics set in the initConfig section if useGlobalMetrics is set to false.
    ## Otherwise, they will be used in addition of globalMetrics.
    ##
    ## Single scalar metrics and table metrics can be defined in this section.
    ## Details on how to define metrics can be found here:
    ## https://datadoghq.dev/integrations-core/tutorials/snmp/profile-format/#metrics
    #
    # metrics:
    #   - OID: 1.3.6.1.2.1.6.5.0
    #     name: tcpPassiveOpens
    #   - OID: 1.3.6.1.2.1.6.5.0
    #     name: tcpPassiveOpens
    #     metricTags:
    #       - TCP

    ## @param metricTags - list of elements - optional
    ## Specify tags that you want applied to all metrics. A tag can be applied from a symbol or an OID.
    ## Regular expressions can be used to separate the resulting value into several tags, or get a
    ## substring using the regular Python engine: https://docs.python.org/3/library/re.html
    #
    # metricTags:
    #  - OID: 1.3.6.1.2.1.1.5.0
    #    symbol: sysName
    #    tag: snmpHost
    #  - # With regular expression matching
    #    OID: 1.3.6.1.2.1.1.5.0
    #    symbol: sysName
    #    match: (.*)-(.*)
    #    tags:
    #        host: \2
    #        deviceType: \1

    ## @param refreshOidsCacheInterval - integer - optional - default: 0
    ## (beta feature) Set this option to enable caching of OIDs. The value is the number of seconds before the
    ## the cache is refreshed.
    ## This option works best when `oidBatchSize` is set to 128 or 256.
    ## This is useful to improve performance when fetching metrics from large tables.
    ## When OID caching is enabled, table row OIDs are reused. This means that the table can be fetched
    ## using batched GET queries, as opposed to one GETNEXT query per row in the table.
    ## The caching is disabled if the interval is set to `0` (default).
    ##
    ## Caveat: If some tables rows are dynamic, new rows will only be fetched at every refresh interval.
    ##         - This means new OIDs will only be picked up when OIDs are refreshed according to the refresh interval.
    ##         - With auto discovery, if the same IP is assigned to a different device with different OIDs,
    ##         the OIDs will be refreshed only according to the refresh interval.
    #
    # refreshOidsCacheInterval: 3600

    ## @param loader - string - optional - default: python
    ## Check loader to use. Available loaders:
    ## - core: (recommended) will use new corecheck SNMP integration
    ## - python: will use legacy python SNMP integration
    #
    # loader: core

    ## @param minCollectionInterval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/writeAgentCheck/#collection-interval
    #
    # minCollectionInterval: 15

